service: justeats

provider:
  name: aws
  runtime: python3.9
  versionFunctions: false
  region: us-east-1
  layers:
    - { Ref: DependenciesLambdaLayer }
  environment:
    ENVIRONMENT: ${env:ENVIRONMENT}
    STAGE: ${env:STAGE}
    DB_HOST: ${env:DB_HOST}
    DB_PORT: ${env:DB_PORT}
    DB_NAME: ${env:DB_NAME}
    DB_USER: ${env:DB_USER}
    DB_PASSWORD: ${env:DB_PASSWORD}
    COGNITO_USER_POOL_ID: { Ref: UserPool }
    COGNITO_CLIENT_ID: { Ref: UserClient }
    DOMAIN_EVENTS_TOPIC: { Ref: DomainEventsTopic }
    PLACES_API_KEY: ${env:PLACES_API_KEY}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - cognito-idp:*
        - sqs:*
        - apigateway:*
        - ec2:*
        - iam:*
        - s3:*
        - sns:*
        - ses:*
        - cloudformation:*
        - lambda:*
        - cloudwatch:*
        - logs:*
        - events:*
      Resource: '*'
  vpc:
    securityGroupIds:
      - Ref: lambdaSg
    subnetIds:
      - ${env:SUBNET_A}
      - ${env:SUBNET_B}

resources:
  - ${file(serverless_resources/security_groups.yml)}
  - ${file(serverless_resources/cloud_front.yml)}
  - ${file(serverless_resources/cognito.yml)}
  - ${file(serverless_resources/sns.yml)}
  - ${file(serverless_resources/s3.yml)}

package:
  exclude:
    - .cache/**
    - .git/**
    - .env/**
    - test/**
    - alembic/**
    - alembic.ini
    - docker-compose.yml
    - Makefile
    - README.md
    - requirements.txt
    - .serverless/
    - layers/**
    - _psycopg.cpython-39-x86_64-linux-gnu.so
    - babel.cfg
    - deploy.sh
    - Dockerfile
    - LICENSE
    - pytest.ini
    - serverless.yml
    - .coverage
    - postgres-data/
    - .circleci/**

functions:
  restauranthub:
    timeout: 10
    handler: src/restaurant_hub/functions/flask.handle
    memorySize: 512
    url:
      cors:
        allowedHeaders:
          - Content-Type
          - Authorization
          - X-Amz-Date
          - X-Amz-Security-Token
          - X-Amz-User-Agent
        allowCredentials: true

layers:
  dependencies:
    path: layers/dependenciesLayer
    name: ${opt:stage, self:provider.stage}-dependenciesLayer
